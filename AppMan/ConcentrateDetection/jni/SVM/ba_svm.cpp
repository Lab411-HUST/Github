/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "predict.h"
#include "train.h"
#include "la411_eeg_svm_SVM.h"
#include "string.h"

JNIEXPORT jint JNICALL Java_la411_eeg_svm_SVM_trainClassifier(JNIEnv *env,
		jclass obj, jstring trainingFileS, jint kernelType, jint cost,
		jfloat gamma, jint isProb, jstring modelFileS) {
	 jboolean isCopy;
	const char *trainingFile = env->GetStringUTFChars(trainingFileS, &isCopy);
	const char *modelFile = env->GetStringUTFChars(modelFileS, &isCopy);

	int v = train(trainingFile, kernelType, cost, gamma, isProb, modelFile);
	env->ReleaseStringUTFChars(trainingFileS, trainingFile);
	env->ReleaseStringUTFChars(modelFileS, modelFile);
	return v;
}

JNIEXPORT jint JNICALL Java_la411_eeg_svm_SVM_doClassification(JNIEnv *env,
		jclass obj, jint probability_estimate, jstring classifyFileS,
		jstring modelFileS, jstring outputFileS) {
	//LOGD("Do classification");
		    jboolean isCopy;
		    const char *classifyFile = env->GetStringUTFChars(classifyFileS, &isCopy);
		    const char *modelFile = env->GetStringUTFChars(modelFileS, &isCopy);
		    const char *outputFile = env->GetStringUTFChars(outputFileS, &isCopy);

		    int resultLabel = predict(probability_estimate,classifyFile, modelFile, outputFile);
		    env->ReleaseStringUTFChars(classifyFileS, classifyFile);
		    env->ReleaseStringUTFChars(modelFileS, modelFile);
		    env->ReleaseStringUTFChars(outputFileS, outputFile);
		    return resultLabel;

}

